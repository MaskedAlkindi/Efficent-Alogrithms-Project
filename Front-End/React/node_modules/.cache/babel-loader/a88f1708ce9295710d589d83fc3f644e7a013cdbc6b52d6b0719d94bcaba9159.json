{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Hajid\\\\Documents\\\\Efficent-Alogrithms-Project\\\\Front-End\\\\React\\\\src\\\\components\\\\location.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { MapContainer, TileLayer, Marker, Popup, Polyline } from 'react-leaflet';\nimport 'leaflet/dist/leaflet.css';\nimport axios from 'axios';\nimport { Icon } from 'leaflet';\nimport { pinOutline, pinSharp } from 'ionicons/icons';\nimport './location.css';\n\n// [lat, lon]\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst locations = [\n  // your locations data here\n];\nconst customIcon = new Icon({\n  iconUrl: pinOutline,\n  iconSize: [38, 95] // size of the icon\n});\n\nconst startIcon = new Icon({\n  iconUrl: pinSharp,\n  iconSize: [38, 95],\n  // size of the icon\n  iconColor: 'green'\n});\nconst endIcon = new Icon({\n  iconUrl: pinSharp,\n  iconSize: [38, 95],\n  // size of the icon\n  iconColor: 'red'\n});\nconst MapComponent = () => {\n  _s();\n  const [startLocation, setStartLocation] = useState(null);\n  const [endLocation, setEndLocation] = useState(null);\n  const [path, setPath] = useState([]);\n  const [popupMessage, setPopupMessage] = useState(null);\n  const handleClick = async () => {\n    if (startLocation !== null && endLocation !== null) {\n      const response = await axios.post('http://localhost:8000/ShortestPath', {\n        startnode: startLocation,\n        endnode: endLocation\n      });\n      const pathIds = response.data.path;\n      const pathLocations = pathIds.map(id => locations.find(loc => loc.id === id).position);\n      setPath(pathLocations);\n      setStartLocation(null);\n      setEndLocation(null);\n\n      // Compute and set the popup message\n      const startName = locations.find(loc => loc.id === startLocation).name;\n      const endName = locations.find(loc => loc.id === endLocation).name;\n      const pathNames = pathIds.map(id => locations.find(loc => loc.id === id).name);\n      setPopupMessage(`The shortest path from ${startName} to ${endName} goes through ${pathNames.join(', ')}.`);\n    }\n  };\n  const selectLocation = id => {\n    if (startLocation === null) {\n      setStartLocation(id);\n    } else if (endLocation === null && startLocation !== id) {\n      setEndLocation(id);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"map-container\",\n    children: [/*#__PURE__*/_jsxDEV(MapContainer, {\n      center: locations[0].position,\n      zoom: 13,\n      style: {\n        height: \"100%\",\n        width: \"100%\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(TileLayer, {\n        url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\",\n        attribution: \"\\xA9 <a href=\\\"http://osm.org/copyright\\\">OpenStreetMap</a> contributors\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), locations.map(location => /*#__PURE__*/_jsxDEV(Marker, {\n        position: location.position,\n        icon: location.id === startLocation ? startIcon : location.id === endLocation ? endIcon : customIcon,\n        eventHandlers: {\n          click: () => {\n            selectLocation(location.id);\n          }\n        },\n        children: /*#__PURE__*/_jsxDEV(Popup, {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              textAlign: 'center'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              children: location.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [location.type, \" \", location.id]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 13\n        }, this)\n      }, location.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 11\n      }, this)), path.length > 0 && /*#__PURE__*/_jsxDEV(Polyline, {\n        positions: path\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"map-message\",\n      children: [startLocation === null && 'Select a start location...', startLocation !== null && endLocation === null && 'Select an end location...', startLocation !== null && endLocation !== null && 'Click \"Show Nearest Path\" to view the path.', popupMessage && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"map-popup\",\n        children: popupMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 26\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleClick,\n      className: \"map-button\",\n      children: \"Show Nearest Path\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 5\n  }, this);\n};\n_s(MapComponent, \"ta6jbJP940Kli5lBEfR3Xw0pt9c=\");\n_c = MapComponent;\nexport default MapComponent;\nvar _c;\n$RefreshReg$(_c, \"MapComponent\");","map":{"version":3,"names":["React","useState","MapContainer","TileLayer","Marker","Popup","Polyline","axios","Icon","pinOutline","pinSharp","jsxDEV","_jsxDEV","locations","customIcon","iconUrl","iconSize","startIcon","iconColor","endIcon","MapComponent","_s","startLocation","setStartLocation","endLocation","setEndLocation","path","setPath","popupMessage","setPopupMessage","handleClick","response","post","startnode","endnode","pathIds","data","pathLocations","map","id","find","loc","position","startName","name","endName","pathNames","join","selectLocation","className","children","center","zoom","style","height","width","url","attribution","fileName","_jsxFileName","lineNumber","columnNumber","location","icon","eventHandlers","click","textAlign","type","length","positions","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Hajid/Documents/Efficent-Alogrithms-Project/Front-End/React/src/components/location.tsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { MapContainer, TileLayer, Marker, Popup, Polyline } from 'react-leaflet';\r\nimport 'leaflet/dist/leaflet.css';\r\nimport axios from 'axios';\r\nimport { Icon } from 'leaflet';\r\nimport { pinOutline, pinSharp } from 'ionicons/icons';\r\nimport './location.css';\r\n\r\ntype Position = [number, number]; // [lat, lon]\r\n\r\ninterface Location {\r\n  id: number;\r\n  name: string;\r\n  type: string;\r\n  position: Position;\r\n}\r\n\r\nconst locations: Location[] = [\r\n  // your locations data here\r\n];\r\n\r\nconst customIcon = new Icon({\r\n  iconUrl: pinOutline,\r\n  iconSize: [38, 95], // size of the icon\r\n});\r\n\r\nconst startIcon = new Icon({\r\n  iconUrl: pinSharp,\r\n  iconSize: [38, 95], // size of the icon\r\n  iconColor: 'green',\r\n});\r\n\r\nconst endIcon = new Icon({\r\n  iconUrl: pinSharp,\r\n  iconSize: [38, 95], // size of the icon\r\n  iconColor: 'red',\r\n});\r\n\r\nconst MapComponent: React.FC = () => {\r\n  const [startLocation, setStartLocation] = useState<number | null>(null);\r\n  const [endLocation, setEndLocation] = useState<number | null>(null);\r\n  const [path, setPath] = useState<Position[]>([]);\r\n  const [popupMessage, setPopupMessage] = useState<string | null>(null);\r\n\r\n  const handleClick = async () => {\r\n    if (startLocation !== null && endLocation !== null) {\r\n      const response = await axios.post('http://localhost:8000/ShortestPath', {\r\n        startnode: startLocation,\r\n        endnode: endLocation\r\n      });\r\n      const pathIds: number[] = response.data.path;\r\n      const pathLocations = pathIds.map(id => locations.find(loc => loc.id === id)!.position);\r\n      setPath(pathLocations);\r\n      setStartLocation(null);\r\n      setEndLocation(null);\r\n\r\n      // Compute and set the popup message\r\n      const startName = locations.find(loc => loc.id === startLocation)!.name;\r\n      const endName = locations.find(loc => loc.id === endLocation)!.name;\r\n      const pathNames = pathIds.map(id => locations.find(loc => loc.id === id)!.name);\r\n      setPopupMessage(`The shortest path from ${startName} to ${endName} goes through ${pathNames.join(', ')}.`);\r\n    }\r\n  }\r\n\r\n  const selectLocation = (id: number) => {\r\n    if (startLocation === null) {\r\n      setStartLocation(id);\r\n    } else if (endLocation === null && startLocation !== id) {\r\n      setEndLocation(id);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"map-container\">\r\n      <MapContainer center={locations[0].position} zoom={13} style={{ height: \"100%\", width: \"100%\" }}>\r\n        <TileLayer\r\n          url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\r\n          attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\r\n        />\r\n        {locations.map(location => (\r\n          <Marker\r\n            key={location.id}\r\n            position={location.position}\r\n            icon={location.id === startLocation ? startIcon : location.id === endLocation ? endIcon : customIcon}\r\n            eventHandlers={{\r\n              click: () => {\r\n                selectLocation(location.id);\r\n              }\r\n            }}\r\n          >\r\n            <Popup>\r\n              <div style={{ textAlign: 'center' }}>\r\n                <h2>{location.name}</h2>\r\n                <p>{location.type} {location.id}</p>\r\n              </div>\r\n            </Popup>\r\n          </Marker>\r\n        ))}\r\n        {path.length > 0 && (\r\n          <Polyline positions={path} />\r\n        )}\r\n      </MapContainer>\r\n      <div className=\"map-message\">\r\n        {startLocation === null && 'Select a start location...'}\r\n        {startLocation !== null && endLocation === null && 'Select an end location...'}\r\n        {startLocation !== null && endLocation !== null && 'Click \"Show Nearest Path\" to view the path.'}\r\n        {popupMessage && <div className=\"map-popup\">{popupMessage}</div>}\r\n      </div>\r\n      <button onClick={handleClick} className=\"map-button\">Show Nearest Path</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MapComponent;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}